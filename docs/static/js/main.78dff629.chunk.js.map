{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,qBAFU,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAmB9C,OACI,0BAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,GAChCR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAQV,2BACIO,KAAK,OACLC,MAAST,EACTU,SApBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,Y,uBCRnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEVC,EAFU,iDAEuCC,UAAWH,GAFlD,+DAGGI,MAAOF,GAHV,cAGVG,EAHU,gBAIKA,EAAKC,OAJV,uBAITC,EAJS,EAITA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAV1B,kBAcTM,GAdS,4CAAH,sDCCPO,EAAc,SAAC,GAA0B,IAAvBJ,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAEtC,OADAc,QAAQC,IAAIN,EAAIC,EAAOV,GAEnB,yBAAKgB,UAAU,8CACX,yBAAKC,IAAMjB,EAAMkB,IAAMR,IACvB,+BAAMA,KCHLS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECAb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAK,GACLe,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAqBxC,OAdAC,qBAAW,WAEP1B,EAASC,GACJ0B,MAAM,SAAAC,GAECH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAK3B,CAACtB,IAEIuB,EDnByBK,CAAc5B,GAAlCa,EAFyB,EAE9BN,KAAae,EAFiB,EAEjBA,QAUpB,OACI,oCACA,wBAAIJ,UAAU,qCAAd,IAAqDlB,GACnDsB,GAAW,uBAAGJ,UAAU,oCAAb,WAEb,yBAAKA,UAAU,wDAGHL,EAAOJ,KAAM,SAAAC,GAAG,OACZ,kBAAC,EAAD,eACImB,IAAMnB,EAAIC,IACLD,UEvBpBoB,EAAe,WAAM,MAGM5C,mBAAS,CAAC,cAHhB,mBAGvB6C,EAHuB,KAGX9C,EAHW,KAW9B,OACI,oCACG,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEA,4BAEQ8C,EAAWtB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACA6B,IAAM7B,EACNA,SAAWA,U,MCnBlCgC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.78dff629.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState();\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 )\r\n        setCategories( cats => [ inputValue, ...cats  ] );\r\n        setInputValue('');\r\n        \r\n        // console.log('submit hecho')\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input\r\n                type=\"text\" \r\n                value= { inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n        \r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\nexport const getGifs = async( category ) =>{\r\n\r\n       const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI (category)  }&limit=10&api_key=2OCzkZ41B8LbYIDF5sjwp8tiZXGzFYbt`\r\n       const resp = await fetch( url );\r\n       const {data} = await resp.json();\r\n    \r\n       const gifs = data.map( img => {\r\n           return {\r\n               id: img.id,\r\n               title: img.title,\r\n               url: img.images?.downsized_medium.url\r\n           }\r\n       })\r\n    \r\n       return gifs;\r\n\r\n    }\r\n\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url } ) => {\r\n    console.log(id, title, url);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInDown\">\r\n            <img src={ url } alt={ title }/>\r\n            <p> { title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n   const { data:images, loading } = useFetchGifs( category );\r\n\r\n    // useEffect( () => {\r\n    //     getGifs( category )\r\n    //         .then( setImages );\r\n    // }, [ category ])\r\n\r\n\r\n    // getGifs();\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\"> { category }</h3>\r\n        { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n\r\n        <div className=\"card-grid card animate__animated animate__fadeInDown\">\r\n           \r\n                {\r\n                    images.map(  img => (\r\n                        <GifGridItem \r\n                            key={ img.id }\r\n                            { ...img } />\r\n                    \r\n                    ))\r\n                }\r\n           \r\n        </div>\r\n        </>\r\n        \r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n            .then( imgs => {\r\n\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n\r\n            })\r\n\r\n    },[category])\r\n\r\n    return state; //{ data: [], loading: true }\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categorias = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n    const [categories, setCategories] = useState(['Samurai X']);\r\n\r\n    // const handleAdd = () => {\r\n    //     // SetCategories( [...categories, 'HunterxHunter'] );\r\n    //     SetCategories( cats => [ ...cats, 'HunterxHunter' ])\r\n    // }\r\n\r\n\r\n    return (\r\n        <>\r\n           <h2>GifExpertApp</h2>\r\n           <AddCategory setCategories={ setCategories } />\r\n           <hr />  \r\n\r\n           <ol>\r\n               {\r\n                   categories.map( category => (\r\n                       <GifGrid\r\n                       key={ category }\r\n                       category={ category } \r\n                       />\r\n                   ))\r\n               }\r\n           </ol>\r\n        </>\r\n\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css'\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}